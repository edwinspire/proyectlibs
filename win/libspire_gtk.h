/* libspire_gtk.h generated by valac 0.12.0, the Vala compiler, do not modify */


#ifndef __R__OPERADORES_EDWINDLC_PROGRAMACION_PROYECTOSSOFTWARE_SOFTWARE_VALA_PROYECTOSVALA_PROYECTS_LIBSPIRE_GTK_BIN_WIN_LIBSPIRE_GTK_H__
#define __R__OPERADORES_EDWINDLC_PROGRAMACION_PROYECTOSSOFTWARE_SOFTWARE_VALA_PROYECTOSVALA_PROYECTS_LIBSPIRE_GTK_BIN_WIN_LIBSPIRE_GTK_H__

#include <glib.h>
#include <glib-object.h>
#include <gtk/gtk.h>
#include <stdlib.h>
#include <string.h>

G_BEGIN_DECLS


#define EDWINSPIRE_GTK_SPIRE_TYPE_GTK_MISC (edwinspire_gtk_spire_gtk_misc_get_type ())
#define EDWINSPIRE_GTK_SPIRE_GTK_MISC(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), EDWINSPIRE_GTK_SPIRE_TYPE_GTK_MISC, edwinspireGtkSpireGtkMisc))
#define EDWINSPIRE_GTK_SPIRE_GTK_MISC_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), EDWINSPIRE_GTK_SPIRE_TYPE_GTK_MISC, edwinspireGtkSpireGtkMiscClass))
#define EDWINSPIRE_GTK_SPIRE_IS_GTK_MISC(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), EDWINSPIRE_GTK_SPIRE_TYPE_GTK_MISC))
#define EDWINSPIRE_GTK_SPIRE_IS_GTK_MISC_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), EDWINSPIRE_GTK_SPIRE_TYPE_GTK_MISC))
#define EDWINSPIRE_GTK_SPIRE_GTK_MISC_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), EDWINSPIRE_GTK_SPIRE_TYPE_GTK_MISC, edwinspireGtkSpireGtkMiscClass))

typedef struct _edwinspireGtkSpireGtkMisc edwinspireGtkSpireGtkMisc;
typedef struct _edwinspireGtkSpireGtkMiscClass edwinspireGtkSpireGtkMiscClass;
typedef struct _edwinspireGtkSpireGtkMiscPrivate edwinspireGtkSpireGtkMiscPrivate;

#define EDWINSPIRE_GTK_SPIRE_TYPE_WIDGET_FROM_UI (edwinspire_gtk_spire_widget_from_ui_get_type ())
#define EDWINSPIRE_GTK_SPIRE_WIDGET_FROM_UI(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), EDWINSPIRE_GTK_SPIRE_TYPE_WIDGET_FROM_UI, edwinspireGtkSpireWidget_From_ui))
#define EDWINSPIRE_GTK_SPIRE_WIDGET_FROM_UI_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), EDWINSPIRE_GTK_SPIRE_TYPE_WIDGET_FROM_UI, edwinspireGtkSpireWidget_From_uiClass))
#define EDWINSPIRE_GTK_SPIRE_IS_WIDGET_FROM_UI(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), EDWINSPIRE_GTK_SPIRE_TYPE_WIDGET_FROM_UI))
#define EDWINSPIRE_GTK_SPIRE_IS_WIDGET_FROM_UI_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), EDWINSPIRE_GTK_SPIRE_TYPE_WIDGET_FROM_UI))
#define EDWINSPIRE_GTK_SPIRE_WIDGET_FROM_UI_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), EDWINSPIRE_GTK_SPIRE_TYPE_WIDGET_FROM_UI, edwinspireGtkSpireWidget_From_uiClass))

typedef struct _edwinspireGtkSpireWidget_From_ui edwinspireGtkSpireWidget_From_ui;
typedef struct _edwinspireGtkSpireWidget_From_uiClass edwinspireGtkSpireWidget_From_uiClass;
typedef struct _edwinspireGtkSpireWidget_From_uiPrivate edwinspireGtkSpireWidget_From_uiPrivate;

#define EDWINSPIRE_GTK_SPIRE_TYPE_WIDGET_DAY_TIME (edwinspire_gtk_spire_widget_day_time_get_type ())
#define EDWINSPIRE_GTK_SPIRE_WIDGET_DAY_TIME(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), EDWINSPIRE_GTK_SPIRE_TYPE_WIDGET_DAY_TIME, edwinspireGtkSpireWidgetDayTime))
#define EDWINSPIRE_GTK_SPIRE_WIDGET_DAY_TIME_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), EDWINSPIRE_GTK_SPIRE_TYPE_WIDGET_DAY_TIME, edwinspireGtkSpireWidgetDayTimeClass))
#define EDWINSPIRE_GTK_SPIRE_IS_WIDGET_DAY_TIME(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), EDWINSPIRE_GTK_SPIRE_TYPE_WIDGET_DAY_TIME))
#define EDWINSPIRE_GTK_SPIRE_IS_WIDGET_DAY_TIME_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), EDWINSPIRE_GTK_SPIRE_TYPE_WIDGET_DAY_TIME))
#define EDWINSPIRE_GTK_SPIRE_WIDGET_DAY_TIME_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), EDWINSPIRE_GTK_SPIRE_TYPE_WIDGET_DAY_TIME, edwinspireGtkSpireWidgetDayTimeClass))

typedef struct _edwinspireGtkSpireWidgetDayTime edwinspireGtkSpireWidgetDayTime;
typedef struct _edwinspireGtkSpireWidgetDayTimeClass edwinspireGtkSpireWidgetDayTimeClass;
typedef struct _edwinspireGtkSpireWidgetDayTimePrivate edwinspireGtkSpireWidgetDayTimePrivate;

#define EDWINSPIRE_GTK_SPIRE_TYPE_DIALOG_DATE_TIME_EDIT (edwinspire_gtk_spire_dialog_date_time_edit_get_type ())
#define EDWINSPIRE_GTK_SPIRE_DIALOG_DATE_TIME_EDIT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), EDWINSPIRE_GTK_SPIRE_TYPE_DIALOG_DATE_TIME_EDIT, edwinspireGtkSpireDialogDateTimeEdit))
#define EDWINSPIRE_GTK_SPIRE_DIALOG_DATE_TIME_EDIT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), EDWINSPIRE_GTK_SPIRE_TYPE_DIALOG_DATE_TIME_EDIT, edwinspireGtkSpireDialogDateTimeEditClass))
#define EDWINSPIRE_GTK_SPIRE_IS_DIALOG_DATE_TIME_EDIT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), EDWINSPIRE_GTK_SPIRE_TYPE_DIALOG_DATE_TIME_EDIT))
#define EDWINSPIRE_GTK_SPIRE_IS_DIALOG_DATE_TIME_EDIT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), EDWINSPIRE_GTK_SPIRE_TYPE_DIALOG_DATE_TIME_EDIT))
#define EDWINSPIRE_GTK_SPIRE_DIALOG_DATE_TIME_EDIT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), EDWINSPIRE_GTK_SPIRE_TYPE_DIALOG_DATE_TIME_EDIT, edwinspireGtkSpireDialogDateTimeEditClass))

typedef struct _edwinspireGtkSpireDialogDateTimeEdit edwinspireGtkSpireDialogDateTimeEdit;
typedef struct _edwinspireGtkSpireDialogDateTimeEditClass edwinspireGtkSpireDialogDateTimeEditClass;
typedef struct _edwinspireGtkSpireDialogDateTimeEditPrivate edwinspireGtkSpireDialogDateTimeEditPrivate;

#define EDWINSPIRE_GTK_SPIRE_TYPE_DATE_TIME_LABEL (edwinspire_gtk_spire_date_time_label_get_type ())
#define EDWINSPIRE_GTK_SPIRE_DATE_TIME_LABEL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), EDWINSPIRE_GTK_SPIRE_TYPE_DATE_TIME_LABEL, edwinspireGtkSpireDateTimeLabel))
#define EDWINSPIRE_GTK_SPIRE_DATE_TIME_LABEL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), EDWINSPIRE_GTK_SPIRE_TYPE_DATE_TIME_LABEL, edwinspireGtkSpireDateTimeLabelClass))
#define EDWINSPIRE_GTK_SPIRE_IS_DATE_TIME_LABEL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), EDWINSPIRE_GTK_SPIRE_TYPE_DATE_TIME_LABEL))
#define EDWINSPIRE_GTK_SPIRE_IS_DATE_TIME_LABEL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), EDWINSPIRE_GTK_SPIRE_TYPE_DATE_TIME_LABEL))
#define EDWINSPIRE_GTK_SPIRE_DATE_TIME_LABEL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), EDWINSPIRE_GTK_SPIRE_TYPE_DATE_TIME_LABEL, edwinspireGtkSpireDateTimeLabelClass))

typedef struct _edwinspireGtkSpireDateTimeLabel edwinspireGtkSpireDateTimeLabel;
typedef struct _edwinspireGtkSpireDateTimeLabelClass edwinspireGtkSpireDateTimeLabelClass;
typedef struct _edwinspireGtkSpireDateTimeLabelPrivate edwinspireGtkSpireDateTimeLabelPrivate;

#define EDWINSPIRE_GTK_SPIRE_TYPE_DATE_TIME_WIDGET (edwinspire_gtk_spire_date_time_widget_get_type ())
#define EDWINSPIRE_GTK_SPIRE_DATE_TIME_WIDGET(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), EDWINSPIRE_GTK_SPIRE_TYPE_DATE_TIME_WIDGET, edwinspireGtkSpireDateTimeWidget))
#define EDWINSPIRE_GTK_SPIRE_DATE_TIME_WIDGET_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), EDWINSPIRE_GTK_SPIRE_TYPE_DATE_TIME_WIDGET, edwinspireGtkSpireDateTimeWidgetClass))
#define EDWINSPIRE_GTK_SPIRE_IS_DATE_TIME_WIDGET(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), EDWINSPIRE_GTK_SPIRE_TYPE_DATE_TIME_WIDGET))
#define EDWINSPIRE_GTK_SPIRE_IS_DATE_TIME_WIDGET_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), EDWINSPIRE_GTK_SPIRE_TYPE_DATE_TIME_WIDGET))
#define EDWINSPIRE_GTK_SPIRE_DATE_TIME_WIDGET_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), EDWINSPIRE_GTK_SPIRE_TYPE_DATE_TIME_WIDGET, edwinspireGtkSpireDateTimeWidgetClass))

typedef struct _edwinspireGtkSpireDateTimeWidget edwinspireGtkSpireDateTimeWidget;
typedef struct _edwinspireGtkSpireDateTimeWidgetClass edwinspireGtkSpireDateTimeWidgetClass;
typedef struct _edwinspireGtkSpireDateTimeWidgetPrivate edwinspireGtkSpireDateTimeWidgetPrivate;

#define EDWINSPIRE_GTK_SPIRE_TYPE_WIDGET_DATE_TIME_START_END (edwinspire_gtk_spire_widget_date_time_start_end_get_type ())
#define EDWINSPIRE_GTK_SPIRE_WIDGET_DATE_TIME_START_END(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), EDWINSPIRE_GTK_SPIRE_TYPE_WIDGET_DATE_TIME_START_END, edwinspireGtkSpireWidgetDateTimeStartEnd))
#define EDWINSPIRE_GTK_SPIRE_WIDGET_DATE_TIME_START_END_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), EDWINSPIRE_GTK_SPIRE_TYPE_WIDGET_DATE_TIME_START_END, edwinspireGtkSpireWidgetDateTimeStartEndClass))
#define EDWINSPIRE_GTK_SPIRE_IS_WIDGET_DATE_TIME_START_END(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), EDWINSPIRE_GTK_SPIRE_TYPE_WIDGET_DATE_TIME_START_END))
#define EDWINSPIRE_GTK_SPIRE_IS_WIDGET_DATE_TIME_START_END_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), EDWINSPIRE_GTK_SPIRE_TYPE_WIDGET_DATE_TIME_START_END))
#define EDWINSPIRE_GTK_SPIRE_WIDGET_DATE_TIME_START_END_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), EDWINSPIRE_GTK_SPIRE_TYPE_WIDGET_DATE_TIME_START_END, edwinspireGtkSpireWidgetDateTimeStartEndClass))

typedef struct _edwinspireGtkSpireWidgetDateTimeStartEnd edwinspireGtkSpireWidgetDateTimeStartEnd;
typedef struct _edwinspireGtkSpireWidgetDateTimeStartEndClass edwinspireGtkSpireWidgetDateTimeStartEndClass;
typedef struct _edwinspireGtkSpireWidgetDateTimeStartEndPrivate edwinspireGtkSpireWidgetDateTimeStartEndPrivate;

struct _edwinspireGtkSpireGtkMisc {
	GObject parent_instance;
	edwinspireGtkSpireGtkMiscPrivate * priv;
};

struct _edwinspireGtkSpireGtkMiscClass {
	GObjectClass parent_class;
};

struct _edwinspireGtkSpireWidget_From_ui {
	GObject parent_instance;
	edwinspireGtkSpireWidget_From_uiPrivate * priv;
};

struct _edwinspireGtkSpireWidget_From_uiClass {
	GObjectClass parent_class;
};

struct _edwinspireGtkSpireWidgetDayTime {
	GtkEntry parent_instance;
	edwinspireGtkSpireWidgetDayTimePrivate * priv;
};

struct _edwinspireGtkSpireWidgetDayTimeClass {
	GtkEntryClass parent_class;
};

struct _edwinspireGtkSpireDialogDateTimeEdit {
	GtkDialog parent_instance;
	edwinspireGtkSpireDialogDateTimeEditPrivate * priv;
};

struct _edwinspireGtkSpireDialogDateTimeEditClass {
	GtkDialogClass parent_class;
};

struct _edwinspireGtkSpireDateTimeLabel {
	GtkLabel parent_instance;
	edwinspireGtkSpireDateTimeLabelPrivate * priv;
	GDateTime* Fecha;
};

struct _edwinspireGtkSpireDateTimeLabelClass {
	GtkLabelClass parent_class;
};

struct _edwinspireGtkSpireDateTimeWidget {
	GtkViewport parent_instance;
	edwinspireGtkSpireDateTimeWidgetPrivate * priv;
};

struct _edwinspireGtkSpireDateTimeWidgetClass {
	GtkViewportClass parent_class;
};

struct _edwinspireGtkSpireWidgetDateTimeStartEnd {
	GtkViewport parent_instance;
	edwinspireGtkSpireWidgetDateTimeStartEndPrivate * priv;
};

struct _edwinspireGtkSpireWidgetDateTimeStartEndClass {
	GtkViewportClass parent_class;
	void (*on_buttonOK_clicked) (edwinspireGtkSpireWidgetDateTimeStartEnd* self);
};


GType edwinspire_gtk_spire_gtk_misc_get_type (void) G_GNUC_CONST;
edwinspireGtkSpireGtkMisc* edwinspire_gtk_spire_gtk_misc_new (void);
edwinspireGtkSpireGtkMisc* edwinspire_gtk_spire_gtk_misc_construct (GType object_type);
void edwinspire_gtk_spire_gtk_misc_GetIterFromTreeView (GtkTreeView* Vista, GtkTreeIter* result);
gint edwinspire_gtk_spire_gtk_misc_IterGetValueInt (GtkListStore* Store, GtkTreeIter* iter, gint Column);
void edwinspire_gtk_spire_gtk_misc_IterGetValue (GtkListStore* Store, GtkTreeIter* iter, gint Column, GValue* result);
void edwinspire_gtk_spire_gtk_misc_GetValueFromTreeView (GtkTreeView* Vista, GtkListStore* Store, gint Column, GValue* result);
void edwinspire_gtk_spire_gtk_misc_IterFromStoreChangeSetCellText (GtkListStore* Store, gint IdColumn, const gchar* Path, GValue* Value, GtkTreeIter* result);
GType edwinspire_gtk_spire_widget_from_ui_get_type (void) G_GNUC_CONST;
edwinspireGtkSpireWidget_From_ui* edwinspire_gtk_spire_widget_from_ui_new (void);
edwinspireGtkSpireWidget_From_ui* edwinspire_gtk_spire_widget_from_ui_construct (GType object_type);
edwinspireGtkSpireWidget_From_ui* edwinspire_gtk_spire_widget_from_ui_new_with_File (const gchar* File);
edwinspireGtkSpireWidget_From_ui* edwinspire_gtk_spire_widget_from_ui_construct_with_File (GType object_type, const gchar* File);
edwinspireGtkSpireWidget_From_ui* edwinspire_gtk_spire_widget_from_ui_new_AutoLoad (const gchar* File);
edwinspireGtkSpireWidget_From_ui* edwinspire_gtk_spire_widget_from_ui_construct_AutoLoad (GType object_type, const gchar* File);
void edwinspire_gtk_spire_widget_from_ui_Load (edwinspireGtkSpireWidget_From_ui* self);
GtkTreeView* edwinspire_gtk_spire_widget_from_ui_Get_TreeView (edwinspireGtkSpireWidget_From_ui* self, const gchar* Name);
GtkWindow* edwinspire_gtk_spire_widget_from_ui_Get_Window (edwinspireGtkSpireWidget_From_ui* self, const gchar* Name);
GtkListStore* edwinspire_gtk_spire_widget_from_ui_Get_ListStore (edwinspireGtkSpireWidget_From_ui* self, const gchar* Name);
GtkTreeViewColumn* edwinspire_gtk_spire_widget_from_ui_Get_TreeViewColumn (edwinspireGtkSpireWidget_From_ui* self, const gchar* Name);
GtkVBox* edwinspire_gtk_spire_widget_from_ui_Get_VBox (edwinspireGtkSpireWidget_From_ui* self, const gchar* Name);
GtkHBox* edwinspire_gtk_spire_widget_from_ui_Get_HBox (edwinspireGtkSpireWidget_From_ui* self, const gchar* Name);
GtkProgressBar* edwinspire_gtk_spire_widget_from_ui_Get_ProgressBar (edwinspireGtkSpireWidget_From_ui* self, const gchar* Name);
GtkButton* edwinspire_gtk_spire_widget_from_ui_Get_Button (edwinspireGtkSpireWidget_From_ui* self, const gchar* Name);
GtkSpinButton* edwinspire_gtk_spire_widget_from_ui_Get_SpinButton (edwinspireGtkSpireWidget_From_ui* self, const gchar* Name);
GtkCalendar* edwinspire_gtk_spire_widget_from_ui_Get_Calendar (edwinspireGtkSpireWidget_From_ui* self, const gchar* Name);
GtkLabel* edwinspire_gtk_spire_widget_from_ui_Get_Label (edwinspireGtkSpireWidget_From_ui* self, const gchar* Name);
GtkDialog* edwinspire_gtk_spire_widget_from_ui_Get_Dialog (edwinspireGtkSpireWidget_From_ui* self, const gchar* Name);
GtkCellRendererText* edwinspire_gtk_spire_widget_from_ui_Get_CellRendererText (edwinspireGtkSpireWidget_From_ui* self, const gchar* Name);
GtkCellRendererToggle* edwinspire_gtk_spire_widget_from_ui_Get_CellRendererToggle (edwinspireGtkSpireWidget_From_ui* self, const gchar* Name);
GtkNotebook* edwinspire_gtk_spire_widget_from_ui_Get_Notebook (edwinspireGtkSpireWidget_From_ui* self, const gchar* Name);
GtkCheckButton* edwinspire_gtk_spire_widget_from_ui_Get_CheckButton (edwinspireGtkSpireWidget_From_ui* self, const gchar* Name);
GtkEntry* edwinspire_gtk_spire_widget_from_ui_Get_Entry (edwinspireGtkSpireWidget_From_ui* self, const gchar* Name);
GtkTable* edwinspire_gtk_spire_widget_from_ui_Get_Table (edwinspireGtkSpireWidget_From_ui* self, const gchar* Name);
const gchar* edwinspire_gtk_spire_widget_from_ui_get_File_ui (edwinspireGtkSpireWidget_From_ui* self);
void edwinspire_gtk_spire_widget_from_ui_set_File_ui (edwinspireGtkSpireWidget_From_ui* self, const gchar* value);
GType edwinspire_gtk_spire_widget_day_time_get_type (void) G_GNUC_CONST;
edwinspireGtkSpireWidgetDayTime* edwinspire_gtk_spire_widget_day_time_new (void);
edwinspireGtkSpireWidgetDayTime* edwinspire_gtk_spire_widget_day_time_construct (GType object_type);
void edwinspire_gtk_spire_widget_day_time_ScanText (edwinspireGtkSpireWidgetDayTime* self);
void edwinspire_gtk_spire_widget_day_time_ApplyFromText (edwinspireGtkSpireWidgetDayTime* self);
guint edwinspire_gtk_spire_widget_day_time_get_Hour (edwinspireGtkSpireWidgetDayTime* self);
void edwinspire_gtk_spire_widget_day_time_set_Hour (edwinspireGtkSpireWidgetDayTime* self, guint value);
guint edwinspire_gtk_spire_widget_day_time_get_Minutes (edwinspireGtkSpireWidgetDayTime* self);
void edwinspire_gtk_spire_widget_day_time_set_Minutes (edwinspireGtkSpireWidgetDayTime* self, guint value);
guint edwinspire_gtk_spire_widget_day_time_get_Seconds (edwinspireGtkSpireWidgetDayTime* self);
void edwinspire_gtk_spire_widget_day_time_set_Seconds (edwinspireGtkSpireWidgetDayTime* self, guint value);
GType edwinspire_gtk_spire_dialog_date_time_edit_get_type (void) G_GNUC_CONST;
edwinspireGtkSpireDialogDateTimeEdit* edwinspire_gtk_spire_dialog_date_time_edit_new (void);
edwinspireGtkSpireDialogDateTimeEdit* edwinspire_gtk_spire_dialog_date_time_edit_construct (GType object_type);
GDateTime* edwinspire_gtk_spire_dialog_date_time_edit_get_DateTime_ (edwinspireGtkSpireDialogDateTimeEdit* self);
void edwinspire_gtk_spire_dialog_date_time_edit_set_DateTime_ (edwinspireGtkSpireDialogDateTimeEdit* self, GDateTime* value);
GType edwinspire_gtk_spire_date_time_label_get_type (void) G_GNUC_CONST;
edwinspireGtkSpireDateTimeLabel* edwinspire_gtk_spire_date_time_label_new (void);
edwinspireGtkSpireDateTimeLabel* edwinspire_gtk_spire_date_time_label_construct (GType object_type);
const gchar* edwinspire_gtk_spire_date_time_label_get_StringFormat (edwinspireGtkSpireDateTimeLabel* self);
void edwinspire_gtk_spire_date_time_label_set_StringFormat (edwinspireGtkSpireDateTimeLabel* self, const gchar* value);
GDateTime* edwinspire_gtk_spire_date_time_label_get_Date_Time (edwinspireGtkSpireDateTimeLabel* self);
void edwinspire_gtk_spire_date_time_label_set_Date_Time (edwinspireGtkSpireDateTimeLabel* self, GDateTime* value);
GType edwinspire_gtk_spire_date_time_widget_get_type (void) G_GNUC_CONST;
edwinspireGtkSpireDateTimeWidget* edwinspire_gtk_spire_date_time_widget_new (void);
edwinspireGtkSpireDateTimeWidget* edwinspire_gtk_spire_date_time_widget_construct (GType object_type);
GDateTime* edwinspire_gtk_spire_date_time_widget_get_Date_Time (edwinspireGtkSpireDateTimeWidget* self);
void edwinspire_gtk_spire_date_time_widget_set_Date_Time (edwinspireGtkSpireDateTimeWidget* self, GDateTime* value);
GType edwinspire_gtk_spire_widget_date_time_start_end_get_type (void) G_GNUC_CONST;
edwinspireGtkSpireWidgetDateTimeStartEnd* edwinspire_gtk_spire_widget_date_time_start_end_new (void);
edwinspireGtkSpireWidgetDateTimeStartEnd* edwinspire_gtk_spire_widget_date_time_start_end_construct (GType object_type);
void edwinspire_gtk_spire_widget_date_time_start_end_on_buttonOK_clicked (edwinspireGtkSpireWidgetDateTimeStartEnd* self);
GDateTime* edwinspire_gtk_spire_widget_date_time_start_end_get_Start (edwinspireGtkSpireWidgetDateTimeStartEnd* self);
void edwinspire_gtk_spire_widget_date_time_start_end_set_Start (edwinspireGtkSpireWidgetDateTimeStartEnd* self, GDateTime* value);
GDateTime* edwinspire_gtk_spire_widget_date_time_start_end_get_End (edwinspireGtkSpireWidgetDateTimeStartEnd* self);
void edwinspire_gtk_spire_widget_date_time_start_end_set_End (edwinspireGtkSpireWidgetDateTimeStartEnd* self, GDateTime* value);


G_END_DECLS

#endif
